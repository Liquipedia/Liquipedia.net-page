@mixin themedContent( $map, $theme ) {
    $theme-map: () !global;

    @each $key, $submap in $map {
        $value: map-get( map-get( $themes, $theme ), '#{$key}' );
        $theme-map: map-merge( $theme-map, ( $key: $value ) ) !global;
    }
    @content;
    $theme-map: null !global;
}

@mixin themed() {
    $parent: '#{&}';

    @each $theme, $map in $themes {
        @if ( startsWith('#{&}', 'html') ) {
            @at-root #{ str-insert( $parent, '.theme--#{$theme}', 5 ) } {
                @include themedContent( $map, $theme ) {
                    @content;
                }
            }
        }

        @else {
            html.theme--#{$theme} & {
                @include themedContent( $map, $theme ) {
                    @content;
                }
            }
        }
    }
}

/**
 * Breakpoint mixin
 *
 * How to use:
 * @include breakpoint( $small, $large ) {} min-width and max-width
 * @include breakpoint( $small ) {} min-width only
 * @include breakpoint( null, $large ) {} max-width only
 *
 * @param min-width
 * @param max-width
 */
@mixin breakpoint( $min-width: null, $max-width: null ) {
    $_between-min-max-space: 0.0625em;

    @if ( $min-width and $max-width ) {
        @media ( max-width: $max-width - $_between-min-max-space ) and (min-width: $min-width) {
            @content;
        }
    }
    @else if ( $max-width ) {
        @media ( max-width: $max-width - $_between-min-max-space ) {
            @content;
        }
    }
    @else {
        @media ( min-width: $min-width ) {
            @content;
        }
    }
}

@mixin visuallyHidden() {
    position: absolute !important;
    clip: rect(1px 1px 1px 1px); /* IE6, IE7 */
    clip: rect(1px, 1px, 1px, 1px);
    padding:0 !important;
    border:0 !important;
    height: 1px !important;
    width: 1px !important;
}
